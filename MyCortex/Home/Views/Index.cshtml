<script>
    var List = jQuery.parseJSON('@Html.Action("LoginDetails", "Home")');

    $(document).ready(function () {
        User_id = window.localStorage['UserTypeId'];
        if (User_id == 1 || User_id == 3) {
            $('#User_id').hide();
            $('#patient_profile').hide();
        }
        else {
            $('#User_id').show();
            $('#patient_profile').show();
        }
        var imgSrc = document.getElementById('imgSrc');
        imgSrc.src = List[1];

        var NATIONALITY_ID = document.getElementById('NATIONALITY_ID');
        NATIONALITY_ID.textContent = List[2];

        var USERTYPE_ID = document.getElementById('USERTYPE_ID');
        USERTYPE_ID.textContent = List[4];

        var MOBILE_NO = document.getElementById('MOBILE_NO');
        MOBILE_NO.textContent = List[5];

        var DOB = document.getElementById('DOB');
        DOB.textContent = List[3];

        var fullname = document.getElementById('fullname');
        fullname.textContent = List[6];

        var Gender = document.getElementById('Gender');
        Gender.textContent = List[7];

        $(document).ready(function () {
            var dob = DOB.textContent;
            dob = dob.replace(/-/gi, '');
            var year = Number(dob.substr(4, 4));
            var month = Number(dob.substr(2, 2));
            var day = Number(dob.substr(0, 2));
            var today = new Date();
            var age = today.getFullYear() - year;

            //var Age = age.toString();
            //$('#Age').val(age.toString());

            Age = document.getElementById('Age');
            Age.textContent = age.toString();


        });
    });
    $(document).ready(function () {
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });
        $('.menuList button').on('click', function () {
            $('.menuList button').removeClass('activeButton');
            $(this).addClass('activeButton');
        });
    });
</script>
<style>

    .resizable .resizers .resizer {
        width: 5px;
        height: 5px;
        border-radius: 50%; /*magic to turn square into circle*/
        /*background: white;*/
        border: 3px solid #4286f4;
        position: absolute;
    }

    .resizers .resizer.top-left {
        left: -5px;
        top: -5px;
        cursor: nwse-resize; /*resizer cursor*/
    }
</style>
@{
    ViewBag.Title = "Index";
    Layout = "~/Shared/Views/_Layout.cshtml";
}
<!DOCTYPE html>
<html ng-app="EmpApp">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link href="@Url.Content("~/CSS/angular-ui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/CSS/jquery.mCustomScrollbar.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Css/bootstrap-multiselect.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Css/bootstrap-toggle.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Css/chat.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Css/sweetalert2.min.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/scripts/angular-ui.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/scripts/ui-bootstrap.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/scripts/ui-bootstrap-tpls.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/app/app.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/app/controller.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/pageSelect.directive.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/smart-table.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.marquee.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.mCustomScrollbar.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/scripts/moment.min.js")"></script>
    <script src="@Url.Content("~/scripts/Bootstrap-multiselect.js")"></script>
    <script src="@Url.Content("~/scripts/bootstrap-toggle.min.js")"></script>
    <script src="@Url.Content("~/scripts/highcharts-ng.js")"></script>
    <script src="@Url.Content("~/scripts/highcharts.js")"></script>
    <script src="@Url.Content("~/scripts/highcharts-more.js")"></script>
    <script src="@Url.Content("~/scripts/highchart.solid-gauge.js")"></script>
    <script src="@Url.Content("~/Scripts/angular-sanitize.js")"></script>
    <script src="@Url.Content("~/scripts/jquery.playSound.js")"></script>
    <script src="@Url.Content("~/scripts/messaging/CometChat.js")"></script>
    <script src="@Url.Content("~/scripts/messaging/chatService.js")"></script>
    <script src="@Url.Content("~/scripts/Chatscripts.js")"></script>
    <script src="@Url.Content("~/scripts/sweetalert2.all.min.js")"></script>
    <script src="@Url.Content("~/Scripts/ckeditor/ckeditor.js")" type="text/javascript"></script>

</head>
<body class="" id="idbody">
    <div class="container">
        <div class="row">
            <div class="themeHeader">
                <div class="themeLogo">
                    @*<img src="images/MyCortexLogo.JPG">*@
                    <img src="images/MyCortexLogo.JPG" id="InstLogo">
                    <div id="patient_profile" class="patientHeaderProfile" style="display: none; margin-left: 10px;">
                        <p id="fullname">{{fullname}}</p>  <i class="fas fa-chevron-down"></i>
                        <div class="patientHeaderProfileDetails" style="display:none">
                            <img class="responsiveProfileImage" id="imgSrc" src="{{imgSrc}}">
                            <p onclick = " ViewProfile()">
                                <span>USER TYPE</span>
                                <span id="USERTYPE_ID">{{USERTYPE_ID}}</span>
                                <i class="far fa-id-badge" style="color:#4285f4"></i>
                            </p>
                            <p onclick = " ViewProfile()">
                                <span>National Id</span>
                                <span id="NATIONALITY_ID">{{NATIONALITY_ID}}</span>
                                <i class="far fa-address-card" style="color:#ea4335"></i>
                            </p>
                            <p onclick = " ViewProfile()">
                                <span>Phone</span>
                                <span id="MOBILE_NO">+{{MOBILE_NO}}</span>
                                <i class="fas fa-mobile-alt" style="color:#fbbc05"></i>
                            </p>
                            <p onclick = " ViewProfile()">
                                <span>DOB</span>
                                <span id="DOB">{{DOB}}</span>
                                <i class="far fa-calendar-alt" style="color:#34a853"></i>
                            </p>
                        </div>
                    </div>
                    <div class="themeMenu">
                        @{ var counter = 1; }
                        @foreach (var menu in Model)
                        {
                            if (counter == 1 && (@menu.Menu_Level == 1) && (@menu.HasChild == 0))
                            {
                                <div class="menuList">
                                    <button class="activeButton" onclick="location.href = '@menu.Menu_URL'"
                                            type="button" aria-expanded="false">
                                        @menu.Menu_Name
                                    </button>
                                </div>
                            }
                            else if ((@menu.Menu_Level == 1) && (@menu.HasChild == 0))
                            {
                                <div class="menuList">
                                    <button onclick="location.href = '@menu.Menu_URL'"
                                            type="button" aria-expanded="false">
                                        @menu.Menu_Name
                                    </button>
                                </div>
                            }
                            else
                            {
                                if ((@menu.Menu_Level == 1) && (@menu.HasChild == 1))
                                {
                                    <div class="dropdown app_menu">
                                        <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown"
                                                aria-expanded="false">
                                            @menu.Menu_Name
                                            <span class="caret"></span>
                                        </button>
                                        <ul class="dropdown-menu customDropdown">
                                            @foreach (var submenu in Model)
                                            {
                                                if (@submenu.Parent_Id == @menu.Menu_Id)
                                                {
                                                    <li class="customDropdownlast-child" onclick="location.href='@submenu.Menu_URL'" style="padding: 4px 16px !important;">@submenu.Menu_Name</li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                }
                            }
                            counter++;
                        }
                    </div>
                </div>
                <div class="themeLogo" id="divPatientType" style="display: none; margin-left: 20px;">
                    <img src="images/Premium.svg" id="imgPatientType">
                </div>
                <div class="themeRight">
                    <div id="User_id" class="patientShortInfo" style="display: none;">
                        <p>
                            <span>Age:</span>
                            <span id="Age">{{Age}}</span>
                        </p>
                        <p>
                            <span>Sex:</span>
                            <span id="Gender">{{Gender}}</span>
                        </p>
                        <p>
                            <span>Chronic Condition</span>
                        </p>
                        <a href="#" title="Monitoring Protocol" style="display:none"><i class="fas fa-cog"></i></a>
                        <a href="#" title="Groups" style="display:none"><i class="fas fa-user-friends"></i></a>
                        <a href="#" title="Unknown Allergies" style="display:none"><i class="fas fa-virus"></i></a>
                    </div>
                    <div id="mydiv" class="notificationOnline">
                        <i class="fas fa-bell" id="UnreadCountIcon" data-placement="left"
                           data-toggle="tooltip" onclick="location.href = 'Home/Index#/NotificationView'"></i>
                        <i class="fas fa-video"></i>
                        <span>10+</span>
                    </div>
                    <span id="usernamespan">Admin</span>
                    <div class="dropdown profile_menu">
                        <button class="btn btn-primary dropdown-toggle noBind" type="button" data-toggle="dropdown"
                                aria-expanded="false">
                            <img src="images/male.png" id="profileIcon" class="themeProfile"
                                 data-toggle="tooltip" data-placement="left">
                        </button>
                        <ul class="dropdown-menu customDropdown logoutDrop">
                            <li class="customDropdownlast-child" onclick="location.href = 'Home/Index#/ChangePassword/2'"
                                style="padding: 5px 20px !important;">Change Password</li>
                            <li class="customDropdownlast-child" onclick="location.href='@Url.Action("LoginOut", "Home" )'"
                                style="padding: 5px 20px !important;">
                                Log Out

                            </li>
                            <li class="customDropdownlast-child" onclick="location.href='@Url.Action("LoginOutAllDevice", "Home" )'"
                                style="padding: 5px 20px !important;">
                                Log Out From All Device

                            </li>
                            <li class="customDropdownlast-child" style="padding: 5px 20px !important;" data-toggle="modal" data-target="#colorSetting">Color Settings</li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="col-md-12 bodyClick" id="DataToggle" ng-controller="ParentController">
                <div class="DataContainer" ng-view>
                </div>
            </div>
        </div>
    </div>

    <a onclick="openChatWindow();" class="float ng-scope" id="btnopenchat" target="_blank" style="display:none">
        <i class="fa fa-comments my-float"></i>
    </a>
    <div class="chatBox chatBoxBig resizable" id="chatBox" style="display:none">
        <div class='resizers'>
            <div class='resizer top-left'></div>
            <div class='resizer top-right'></div>
            <div class='resizer bottom-left'></div>
            <div class='resizer bottom-right'></div>
        </div>
        <input id="loggedInUID" type="hidden" />
        <input id="chatUserUID" type="hidden" value="" />
        <input id="callSessionID" type="hidden" />
        <form id="message-form">
            <div class="chatHeader">
                <span id="chatBoxOpener"><i class="fas fa-arrow-down"></i></span>
                <img class="chatProfile" src="../../Images/male.png" alt="Profile">
                <h1 id="h1user">
                    <br />
                    <span></span>
                </h1>
                <a class="callIcon" id="showchatIcon" onclick="showchatOnCall()">
                    <i class="far fa-comment-alt"></i>
                </a>
                @*<a href="#" class="callIcon" id="deleteGroup" title="Delete Group" style="display:none"><i class="fas fa-trash-alt"></i></a>*@
                <a href="#" class="callIcon" id="addGroup" title="Create Group"><i class="fas fa-users"></i></a>
                <a href="#" class="callIcon" id="addressBook" title="Show or hide contact book">
                    <i class="fas fa-address-book"></i>
                </a>
                @*<a href="#" class="callIcon" id="notifications">
                        <i class="fas fa-bell"></i>
                    </a>*@
                <a class="callIcon" onclick="audioCallUser()">
                    <i class="fas fa-phone-alt"></i>
                </a>
                <a class="videoIcon" onclick="videoCallUser()">
                    <i class="fas fa-video"></i>
                </a>
            </div>
            <div class="chatBody contactList groupsList" id="groupsList" style="display: none;">
                <div class="lds-ripple" id="groupcreateLoader" style="display: none;"><div></div><div></div></div>
                <div class="searchHolder">
                    <input type="text" class="contactSearch" style="width: 75%;" id="groupname" placeholder="Group Name">
                    <button type="button" class="btn  btn-save ml-5" id="btnCreateGroup">
                        Create
                    </button>
                </div>
                <ul id="group-user" class="group-user"></ul>
            </div>
            <div class="chatBody callBox" id="call-page" style="display:none">
                <!--<p>Today</p>-->
                <h2 id="callinitiatorname"><span></span></h2>
                <a id="call-accept" class="call" onclick="callAccept()">
                    @*<img src="~/Images/callaccept.png" style="height:40px;width:40px"/>*@
                    <i class="fa fa-phone-alt" aria-hidden="true"></i>
                </a>
                <a id="call-reject" class="call endCall" onclick="callReject()">
                    <img src="~/Images/callreject.jpg" style="height:40px;width:40px" />
                    @*<i class="fa fa-phone-alt" aria-hidden="true"></i>*@
                </a>
            </div>
            <div class="chatBody contactList chatBodyHalf" id="add-book">
                <div class="searchHolder">
                    <input type="text" class="contactSearch" id="contactSearch" placeholder="Search Contact" onKeyup="searchContact_onKeyPress()">
                </div>
                @*<ul id="group-user">
                    </ul>*@
                <div class="lds-ripple" id="chatLoader_add" style="display: none;"><div></div><div></div></div>
                <ul id="address-user"></ul>
            </div>
            @*onscroll='alert("Scroll Called");'*@
            @*           <div class="chatBody" id="notificationList" style="display:none">
                    <ul class="notificationList">
                        <li>
                            <h1>Prasanth</h1>
                            <p>Yesterday,06.30 pm <i class="fas fa-phone-alt"></i></p>
                        </li>
                        <li>
                            <h1>Prasanth</h1>
                            <p>Yesterday,06.30 pm <i class="fas fa-video"></i></p>
                        </li>
                    </ul>
                </div>*@
            <div class="chatBody chatBodyHalf resizable" id="msg-page" style="display:block">
                <div class="lds-ripple" id="chatLoader" style="display: none;"><div></div><div></div></div>
                <ul id="group-message-holder"></ul>
            </div>
            <div class="chatFooter" id="msg-footer">
                <input id='filechat' type='file' style="display:none" onchange="handleFiles(this.files)" />
                <a class="chatAttachment" onclick="openChatAttachmentDialog()" id="btnfilechat"><i class="fas fa-paperclip"></i></a>
                <input type="text" id="input-text" placeholder="Type your message..."
                       onKeyPress="sendChatonKeyPress(event)">
                <a onclick="sendChatMessage()"><i class="fas fa-chevron-circle-right"></i></a>
            </div>
        </form>
    </div>

    <div id="colorSetting" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" onclick="removeStyles();">&times;</button>
                    <h4 class="modal-title">Color Setting</h4>
                </div>
                <div class="modal-body ">
                    <div class="row">
                        <div class="col-sm-3 colorSettings">

                            <div class="colorGroup">
                                <h1>Title Color</h1>
                                <input type="color" id="title" name="title" />

                            </div>
                            <div class="colorGroup">
                                <h1>Sub-Title Color</h1>
                                <input type="color" id="subTitle" name="subTitle" />

                            </div>
                            <div class="colorGroup">
                                <h1>Header Background Color</h1>
                                <input type="color" id="headerBg" name="headerBg" />

                            </div>
                            <div class="colorGroup">
                                <h1>Header Text Color</h1>
                                <input type="color" id="headerText" name="headerText" />

                            </div>
                            <div class="colorGroup">
                                <h1>Table Header Background Color</h1>
                                <input type="color" id="TableHeaderBg" name="TableHeaderBg" />

                            </div>
                            <div class="colorGroup">
                                <h1>Table Header Text Color</h1>
                                <input type="color" id="TableHeaderText" name="TableHeaderText" />

                            </div>
                            <div class="colorGroup">
                                <h1>Table Alternate Row Background Color</h1>
                                <input type="color" id="TableAlternateRowBg" name="TableAlternateRowBg" />

                            </div>
                            <div class="colorGroup">
                                <h1>Table Alternate Row Text Color</h1>
                                <input type="color" id="TableAlternateRowText" name="TableAlternateRowText" />

                            </div>
                            <div class="colorGroup">
                                <h1>Table Alternate Row Hover Background Color</h1>
                                <input type="color" id="TableRowHoverBg" name="TableRowHoverBg" />

                            </div>
                            <div class="colorGroup">
                                <h1>Table Alternate Row Hover Text Color</h1>
                                <input type="color" id="TableRowHoverText" name="TableRowHoverText" />

                            </div>
                            <div class="colorGroup">
                                <h1>Link Text</h1>
                                <input type="color" id="linkText" name="linkText" />

                            </div>
                            <div class="colorGroup">
                                <h1>Positive Action Button Background Color</h1>
                                <input type="color" id="positiveBtnBg" name="positiveBtnBg" />

                            </div>
                            <div class="colorGroup">
                                <h1>Positive Action Button Border Color</h1>
                                <input type="color" id="positiveBtnBorder" name="positiveBtnBorder" />

                            </div>
                            <div class="colorGroup">
                                <h1>Positive Action Button Text Color</h1>
                                <input type="color" id="positiveBtnText" name="positiveBtnText" />

                            </div>
                            <div class="colorGroup">
                                <h1>PostPositiveive Action Button Hover Background Color</h1>
                                <input type="color" id="positiveHoverBtnBg" name="positiveHoverBtnBg" />

                            </div>
                            <div class="colorGroup">
                                <h1>Positive Action Button Hover Border Color</h1>
                                <input type="color" id="positiveHoverBtnBorder" name="positiveHoverBtnBorder" />

                            </div>
                            <div class="colorGroup">
                                <h1>Positive Action Button Hover Text Color</h1>
                                <input type="color" id="positiveHoverBtnText" name="positiveHoverBtnText" />

                            </div>
                            <div class="colorGroup">
                                <h1>Negative Action Button Background Color</h1>
                                <input type="color" id="negativeBtnBg" name="negativeBtnBg" />

                            </div>
                            <div class="colorGroup">
                                <h1>Negative Action Button Border Color</h1>
                                <input type="color" id="negativeBtnBorder" name="negativeBtnBorder" />

                            </div>
                            <div class="colorGroup">
                                <h1>Negative Action Button Text Color</h1>
                                <input type="color" id="negativeBtnText" name="negativeBtnText" />

                            </div>
                            <div class="colorGroup">
                                <h1>Negative Action Button Hover Background Color</h1>
                                <input type="color" id="negativeHoverBtnBg" name="negativeHoverBtnBg" />

                            </div>
                            <div class="colorGroup">
                                <h1>Negative Action Button Hover Border Color</h1>
                                <input type="color" id="negativeHoverBtnBorder" name="negativeHoverBtnBorder" />

                            </div>
                            <div class="colorGroup">
                                <h1>Negative Action Button Hover Text Color</h1>
                                <input type="color" id="negativeHoverBtnText" name="negativeHoverBtnText" />

                            </div>
                        </div>
                        <div class="col-sm-9">
                            <div class="frameController">

                                <iframe id="frameController"></iframe>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="theme-btn-1 mr-10" onclick="saveSettings();">Save Settings</button>
                    <button type="button" class="theme-btn-1 mr-10" onclick="restoreSettings();">Restore Default</button>
                    <button type="button" class="theme-btn-2" onclick="removeStyles();">Close</button>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
<script type="text/javascript">
    let saved = false;
    // let baseUrl = $("base").first().attr("href");
    let removeStyles = () => {

        if (!saved) {
            if (confirm("Settings not yet saved do you want to close")) {
                $('#colorSetting').modal('hide');
                //alert('after close again make api to get new values');
                applyStyle();
                saved = false;
            }
        }
        else {
            $('#colorSetting').modal('hide');
            applyStyle();
            saved = false;

        }


    };
    let getAPIObj = {
        primary: "#1d374e",
        secondary: "#555",
        headerBg: "#1d374e",
        headerText: "#fff",
        TableHeaderBg: "#1d374e",
        TableHeaderText: "#fff",
        TableAlternateRowBg: "#7a8ddb1a",
        TableAlternateRowText: "#333",
        TableRowHoverBg: "#efefef",
        TableRowHoverText: "#333",
        linkText: "337ab7",
        positiveBtnBg: "#1d374e",
        positiveBtnBorder: "transparent",
        positiveBtnText: "#fff",
        positiveHoverBtnBg: "transparent",
        positiveHoverBtnBorder: "#1d374e",
        positiveHoverBtnText: "#1d374e",
        negativeBtnBg: "#d3d5d8",
        negativeBtnBorder: "transparent",
        negativeBtnText: "#000",
        negativeHoverBtnBg: "#fff",
        negativeHoverBtnBorder: "#d3d5d8",
        negativeHoverBtnText: "#000",
        title: "#1d374e",
        subTitle: "#1d374e"

    };

    let defaultValueObj = {
        primary: "#1d374e",
        secondary: "#555",
        headerBg: "#1d374e",
        headerText: "#fff",
        TableHeaderBg: "#1d374e",
        TableHeaderText: "#fff",
        TableAlternateRowBg: "#7a8ddb1a",
        TableAlternateRowText: "#333",
        TableRowHoverBg: "#efefef",
        TableRowHoverText: "#333",
        linkText: "337ab7",
        positiveBtnBg: "#1d374e",
        positiveBtnBorder: "transparent",
        positiveBtnText: "#fff",
        positiveHoverBtnBg: "transparent",
        positiveHoverBtnBorder: "#1d374e",
        positiveHoverBtnText: "#1d374e",
        negativeBtnBg: "#d3d5d8",
        negativeBtnBorder: "transparent",
        negativeBtnText: "#000",
        negativeHoverBtnBg: "#fff",
        negativeHoverBtnBorder: "#d3d5d8",
        negativeHoverBtnText: "#000",
        title: "#1d374e",
        subTitle: "#1d374e"

    };

    let applyStyle = () => {
        //alert('use this method when user logged in first time and use response object instead of getAPIObj')
        // alert(@HttpContext.Current.Session["UserId"].ToString());
        $.get(baseUrl + "api/ColorPreference/List?UserId=" + @HttpContext.Current.Session["UserId"].ToString(), function (data) {
            if (data["Status"]) {
                getAPIObj["primary"] = data["ColorPreferences"]["Primary"];
                getAPIObj["secondary"] = data["ColorPreferences"]["Secondary"];
                getAPIObj["headerBg"] = data["ColorPreferences"]["HeaderBg"];
                getAPIObj["headerText"] = data["ColorPreferences"]["HeaderText"];
                getAPIObj["TableHeaderBg"] = data["ColorPreferences"]["TableHeaderBg"];
                getAPIObj["TableHeaderText"] = data["ColorPreferences"]["TableHeaderText"];
                getAPIObj["TableAlternateRowBg"] = data["ColorPreferences"]["TableAlternateRowBg"];
                getAPIObj["TableAlternateRowText"] = data["ColorPreferences"]["TableAlternateRowText"];
                getAPIObj["TableRowHoverBg"] = data["ColorPreferences"]["TableRowHoverBg"];
                getAPIObj["TableRowHoverText"] = data["ColorPreferences"]["TableRowHoverText"];
                getAPIObj["linkText"] = data["ColorPreferences"]["LinkText"];
                getAPIObj["positiveBtnBg"] = data["ColorPreferences"]["PositiveBtnBg"];
                getAPIObj["positiveBtnBorder"] = data["ColorPreferences"]["PositiveBtnBorder"];
                getAPIObj["positiveBtnText"] = data["ColorPreferences"]["PositiveBtnText"];
                getAPIObj["positiveHoverBtnBg"] = data["ColorPreferences"]["PositiveHoverBtnBg"];
                getAPIObj["positiveHoverBtnBorder"] = data["ColorPreferences"]["PositiveHoverBtnBorder"];
                getAPIObj["positiveHoverBtnText"] = data["ColorPreferences"]["PositiveHoverBtnText"];
                getAPIObj["negativeBtnBg"] = data["ColorPreferences"]["NegativeBtnBg"];
                getAPIObj["negativeBtnBorder"] = data["ColorPreferences"]["NegativeBtnBorder"];
                getAPIObj["negativeBtnText"] = data["ColorPreferences"]["NegativeBtnText"];
                getAPIObj["negativeHoverBtnBg"] = data["ColorPreferences"]["NegativeHoverBtnBg"];
                getAPIObj["negativeHoverBtnBorder"] = data["ColorPreferences"]["NegativeHoverBtnBorder"];
                getAPIObj["negativeHoverBtnText"] = data["ColorPreferences"]["NegativeHoverBtnText"];
                getAPIObj["title"] = data["ColorPreferences"]["Title"];
                getAPIObj["subTitle"] = data["ColorPreferences"]["SubTitle"];
            } else {
                getAPIObj["primary"] = defaultValueObj["primary"];
                getAPIObj["secondary"] = defaultValueObj["secondary"];
                getAPIObj["headerBg"] = defaultValueObj["HeaderBg"];
                getAPIObj["headerText"] = defaultValueObj["HeaderText"];
                getAPIObj["TableHeaderBg"] = defaultValueObj["TableHeaderBg"];
                getAPIObj["TableHeaderText"] = defaultValueObj["TableHeaderText"];
                getAPIObj["TableAlternateRowBg"] = defaultValueObj["TableAlternateRowBg"];
                getAPIObj["TableAlternateRowText"] = defaultValueObj["TableAlternateRowText"];
                getAPIObj["TableRowHoverBg"] = defaultValueObj["TableRowHoverBg"];
                getAPIObj["TableRowHoverText"] = defaultValueObj["TableRowHoverText"];
                getAPIObj["linkText"] = defaultValueObj["LinkText"];
                getAPIObj["positiveBtnBg"] = defaultValueObj["PositiveBtnBg"];
                getAPIObj["positiveBtnBorder"] = defaultValueObj["PositiveBtnBorder"];
                getAPIObj["positiveBtnText"] = defaultValueObj["PositiveBtnText"];
                getAPIObj["positiveHoverBtnBg"] = defaultValueObj["PositiveHoverBtnBg"];
                getAPIObj["positiveHoverBtnBorder"] = defaultValueObj["PositiveHoverBtnBorder"];
                getAPIObj["positiveHoverBtnText"] = defaultValueObj["PositiveHoverBtnText"];
                getAPIObj["negativeBtnBg"] = defaultValueObj["NegativeBtnBg"];
                getAPIObj["negativeBtnBorder"] = defaultValueObj["NegativeBtnBorder"];
                getAPIObj["negativeBtnText"] = defaultValueObj["NegativeBtnText"];
                getAPIObj["negativeHoverBtnBg"] = defaultValueObj["NegativeHoverBtnBg"];
                getAPIObj["negativeHoverBtnBorder"] = defaultValueObj["NegativeHoverBtnBorder"];
                getAPIObj["negativeHoverBtnText"] = defaultValueObj["NegativeHoverBtnText"];
                getAPIObj["title"] = defaultValueObj["Title"];
                getAPIObj["subTitle"] = defaultValueObj["SubTitle"];

            }
            console.log("applyStyle:" + getAPIObj[0])
            for (key in getAPIObj) {

                if (getAPIObj[key] != null && getAPIObj[key] != "") {
                    $(`#${key}`).val(getAPIObj[key]);
                    document.documentElement.style.setProperty(`--${key}`, getAPIObj[key]);

                }

            }
            //console.log(data)
            //alert(data["ColorPreferences"]["Primary"]);
        });

    }
    applyStyle();
    let saveSettings = () => {
        let saveAPIObj = {
            UserId: @HttpContext.Current.Session["UserId"].ToString(),
            InstitutionId: @HttpContext.Current.Session["InstitutionId"].ToString(),
            primary: $('#primary').val() || "#1d374e",
            secondary: $('#secondary').val() || "#555",
            headerBg: $('#headerBg').val() || "#1d374e",
            headerText: $('#headerText').val() || "#fff",
            TableHeaderBg: $('#TableHeaderBg').val() || "#1d374e",
            TableHeaderText: $('#TableHeaderText').val() || "#fff",
            TableAlternateRowBg: $('#TableAlternateRowBg').val() || "#7a8ddb1a",
            TableAlternateRowText: $('#TableAlternateRowText').val() || "#333",
            TableRowHoverBg: $('#TableRowHoverBg').val() || "#efefef",
            TableRowHoverText: $('#TableRowHoverText').val() || "#333",
            linkText: $('#linkText').val() || "337ab7",
            positiveBtnBg: $('#positiveBtnBg').val() || "#1d374e",
            positiveBtnBorder: $('#positiveBtnBorder').val() || "transparent",
            positiveBtnText: $('#positiveBtnText').val() || "#fff",
            positiveHoverBtnBg: $('#positiveHoverBtnBg').val() || "transparent",
            positiveHoverBtnBorder: $('#positiveHoverBtnBorder').val() || "#1d374e",
            positiveHoverBtnText: $('#positiveHoverBtnText').val() || "#1d374e",
            negativeBtnBg: $('#negativeBtnBg').val() || "#d3d5d8",
            negativeBtnBorder: $('#negativeBtnBorder').val() || "transparent",
            negativeBtnText: $('#negativeBtnText').val() || "#000",
            negativeHoverBtnBg: $('#negativeHoverBtnBg').val() || "#fff",
            negativeHoverBtnBorder: $('#negativeHoverBtnBorder').val() || "#d3d5d8",
            negativeHoverBtnText: $('#negativeHoverBtnText').val() || "#000",
            title: $('#title').val() || "#1d374e",
            subTitle: $('#subTitle').val() || "#1d374e"
        }
        console.log("saveStyle:" + saveAPIObj);
        $.post(baseUrl + "api/ColorPreference/Save", saveAPIObj, function (data, status) {
            if (data["Status"]) {
                saved = true;
                removeStyles();
            }
        });
        //alert('use this method and saveAPIObj for saving value in DB ');

    };
    let restoreSettings = () => {
        if (confirm("Click Ok Button to Restore Color Settings. If not Please click close button!")) {
            let restoreAPIObj = {
                UserId: @HttpContext.Current.Session["UserId"].ToString(),
                InstitutionId: @HttpContext.Current.Session["InstitutionId"].ToString(),
                primary: defaultValueObj["primary"],
                secondary: defaultValueObj["secondary"],
                headerBg: defaultValueObj["headerBg"],
                headerText: defaultValueObj["headerText"],
                TableHeaderBg: defaultValueObj["TableHeaderBg"],
                TableHeaderText: defaultValueObj["TableHeaderText"],
                TableAlternateRowBg: defaultValueObj["TableAlternateRowBg"],
                TableAlternateRowText: defaultValueObj["TableAlternateRowText"],
                TableRowHoverBg: defaultValueObj["TableRowHoverBg"],
                TableRowHoverText: defaultValueObj["TableRowHoverText"],
                linkText: defaultValueObj["linkText"],
                positiveBtnBg: defaultValueObj["positiveBtnBg"],
                positiveBtnBorder: defaultValueObj["positiveBtnBorder"],
                positiveBtnText: defaultValueObj["positiveBtnText"],
                positiveHoverBtnBg: defaultValueObj["positiveHoverBtnBg"],
                positiveHoverBtnBorder: defaultValueObj["positiveHoverBtnBorder"],
                positiveHoverBtnText: defaultValueObj["positiveHoverBtnText"],
                negativeBtnBg: defaultValueObj["negativeBtnBg"],
                negativeBtnBorder: defaultValueObj["negativeBtnBorder"],
                negativeBtnText: defaultValueObj["negativeBtnText"],
                negativeHoverBtnBg: defaultValueObj["negativeHoverBtnBg"],
                negativeHoverBtnBorder: defaultValueObj["negativeHoverBtnBorder"],
                negativeHoverBtnText: defaultValueObj["negativeHoverBtnText"],
                title: defaultValueObj["title"],
                subTitle: defaultValueObj["subTitle"]
            }
            console.log("restoreStyle:" + restoreAPIObj);
            $.post(baseUrl + "api/ColorPreference/Save", restoreAPIObj, function (data, status) {
                console.log("restoreStyleresponse:" + data);
                if (data["Status"]) {
                    saved = true;
                    removeStyles();
                }
            });
            //$('#colorSetting').modal('hide');
            //alert('after close again make api to get new values');
            //applyStyle();
            //saved = false;
        }

    };
    
    (function ($) {


        $('.frameController iframe').attr('src', location.href);
        $('.colorGroup input[type="color"]').change(function () {

            document.documentElement.style.setProperty(`--${$(this).attr('id')}`, $(this).val());
            document.getElementById('frameController').contentWindow.document.documentElement.style.setProperty(`--${$(this).attr('id')}`, $(this).val());
        });



        /*$( "#chatBox" ).resizable({
            ghost: true,
            handles: "n, e, s, w",
            minHeight:430,
            stop:function(){
                let totalHeight = $('#chatBox').outerHeight() - 72;
                $('.chatBody').height(totalHeight);
                $('.group-user').height(totalHeight - 40)

            }
        });*/

        $('.patientHeaderProfile').hover(function () {
            $('.patientHeaderProfileDetails').slideToggle();
        })
        $('#deleteGroup').click(function (e) {
            e.preventDefault();
            chatService.deleteGroupDetails();
        });

        $('#addGroup').click(function (e) {
            e.preventDefault();

            if ($("#addressBook").hasClass("aqua") == true) {

                $('.chatBody').toggleClass('chatBodyHalf');
                $('.contactList').toggle();
                $('#groupsList').hide();
                $('#addressBook').toggleClass('aqua');
                $('.chatBox').toggleClass('chatBoxBig')
            }

            if ($("#addGroup").hasClass("aqua") == false) {
                $('.chatBody').hide();
                $('#groupsList').show();
                $('.chatBox').removeClass('chatBoxBig')
                $('#addGroup').toggleClass('aqua');

                chatService.groupaddressbookDetails();
            }
            else {
                $('.chatBody').show();
                $('#groupsList').hide();
                $('.chatBox').addClass('chatBoxBig')
                $('#addGroup').toggleClass('aqua');
                $('#call-page').hide();
                chatService.getaddressbookDetails($('#contactSearch').val());
            }
        })
        $(window).on("load", function () {

            $('#chatBox').attr("style", "display:none");
            $('#btnopenchat').hide();
            $("#showchatIcon").hide();
            if (window.localStorage['UserTypeId'] != "1" && window.localStorage['UserTypeId'] != "3") {
                utilService.initializeChat();
            }

            // create group option for Care Giver and Care Coordinator
            if (window.localStorage['UserTypeId'] != "5" && window.localStorage['UserTypeId'] != "6") {
                $('#addGroup').hide();
            }
        });

    })(jQuery);

    $('#addressBook').click(function (e) {
        e.preventDefault()

        if ($("#addGroup").hasClass("aqua") == true) {
            $('.chatBody').show();
            $('#groupsList').hide();
            $('.chatBox').addClass('chatBoxBig')
            $('#addGroup').toggleClass('aqua');
            $('#call-page').hide();
        }
        $('.chatBody').toggleClass('chatBodyHalf');
        $('.contactList').toggle();
        $('#groupsList').hide();
        $('#addressBook').toggleClass('aqua');

        $("#call-page").attr("style", "display:none");
        $('.chatBox').toggleClass('chatBoxBig')
        chatService.scrollToBottom();
    })

    $('#btnCreateGroup').click(function (e) {
        e.preventDefault()
        if ($("#groupname").val() == "") {
            alert("Please enter Group name");
            return false;
        }
        $("#groupcreateLoader").attr("style", "display:block")
        chatService.createGroup($("#groupname").val());
        $("#groupcreateLoader").attr("style", "display:none")
    })

    function openChatWindow() {
        if (window.localStorage['UserTypeId'] != "1" && window.localStorage['UserTypeId'] != "3") {
            utilService.openChatPage("");
        }
        else {
            $('#chatBox').attr("style", "display:none");
            $('#btnopenchat').attr("style", "display:none");
        }
    }
    function ViewProfile() {
        Id = window.localStorage['UserId'];
        //window.location.href = baseUrl + "/Home/Index#/PatientVitals/" + Id + "/2";
        window.location.href = baseUrl + "/Home/Index#/PatientView/" + Id + "/2" + "/" + "3";
    }
    function searchContact_onKeyPress() {
        $('#address-user > li:not(:contains(' + $('#contactSearch').val() + '))').hide();
        $('#address-user > li:contains(' + $('#contactSearch').val() + ')').show();

        /*var listItems = $("#address-user li");
        listItems.each(function (idx, li) {
            var product = $(li);
            console.log(product[0].innerHTML.toLowerCase().contains($('#contactSearch').val().toLowerCase()));
            // and the rest of your code
        });*/

    }
    $('#chatBoxOpener').click(function () {
        $('.chatBox').toggleClass('chatBoxClose');
        if ($('#chatBox').hasClass('chatBoxClose') == true) {

            $('#chatBox').attr('style', 'height:430px;width:630px;bottom: -430px !important;');
            //$('#chatBox').attr('style', 'height:430px;width:630px;bottom: -' + $('#chatBox').outerHeight(true) + 'px !important;');
        }
        else {
            $('#chatBox').attr('style', 'display: block;height:430px;width:630px');
        }

        let totalHeight = $('#chatBox').outerHeight() - 72;
        $('.chatBody').height(totalHeight);
        $('.group-user').height(totalHeight - 72)

        $('#address-user').height(totalHeight - 40);

        $(this).find('i').toggleClass('fa-arrow-up');
        $(this).find('i').toggleClass('fa-arrow-down');
    })
    // chat window
    function chatarrowclick() {
        $('.chatBox').toggleClass('chatBoxClose');
        $('#chatBoxOpener').find('i').toggleClass('fa-arrow-up');
        $('#chatBoxOpener').find('i').toggleClass('fa-arrow-down');
    }
    function openChatAttachmentDialog() {
        document.getElementById('filechat').click();
    }
    function handleFiles() {
        chatService.sendMediaMessage();
        //chatService.getaddressbookDetails($('#contactSearch').val());
    }
    function sendChatonKeyPress(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode == 13) {
            sendChatMessage()
            //chatService.getaddressbookDetails($('#contactSearch').val());
        }
        else {
            if (evt.target.value === "")
                chatService.endTypeingNot();
            else
                chatService.startTypeingNot();
        }
    }
    function sendChatMessage() {
        //chatService.createGroup();
        chatService.sendMessage();
        //chatService.getaddressbookDetails($('#contactSearch').val());
    }
    function audioCallUser() {

        if ($("#addressBook").hasClass("aqua") == true) {
            $('.chatBody').toggleClass('chatBodyHalf');
            $('.contactList').toggle();
            $('#groupsList').hide();
            $('#addressBook').toggleClass('aqua');
            $('.chatBox').toggleClass('chatBoxBig');
        }

        chatService.initiateCall();
    }
    function videoCallUser() {
        chatService.initiateVideCall();
    }
    function openUserChat(userType, viewUser) {
        chatService.fetchMessages(userType, viewUser.toString());
        //chatService.getaddressbookDetails($('#contactSearch').val());
    }

    function callAccept() {
        chatService.callAccept();
    }
    function callReject() {
        chatService.callReject();
    }
    function showchatOnCall() {
        $('.contactList').toggle();
        $('#groupsList').hide();
        if ($("#showchatIcon").hasClass("aqua") == false) {
            $("#call-page").attr("style", "display:none")
            $('#showchatIcon').toggleClass('aqua');
            $("#msg-page").attr("style", "display:block")
        }
        else {
            $("#call-page").attr("style", "display:flex")
            $('#showchatIcon').toggleClass('aqua');
            $("#msg-page").attr("style", "display:none")
        }

    }
    

    function makeResizableDiv(div) {
        // default size = 680 * 430
        const element = document.querySelector(div);
        const resizers = document.querySelectorAll(div + ' .resizer')
        const minimum_size = 20;
        let original_width = 0;
        let original_height = 0;
        let original_x = 0;
        let original_y = 0;
        let original_mouse_x = 0;
        let original_mouse_y = 0;
        for (let i = 0; i < resizers.length; i++) {
            const currentResizer = resizers[i];
            currentResizer.addEventListener('mousedown', function (e) {
                e.preventDefault()
                original_width = parseFloat(getComputedStyle(element, null).getPropertyValue('width').replace('px', ''));
                original_height = parseFloat(getComputedStyle(element, null).getPropertyValue('height').replace('px', ''));
                original_x = element.getBoundingClientRect().left;
                original_y = element.getBoundingClientRect().top;
                original_mouse_x = e.pageX;
                original_mouse_y = e.pageY;
                window.addEventListener('mousemove', resize)
                window.addEventListener('mouseup', stopResize)
            })

            function resize(e) {
                // restrict when minimizing the chat window
                if (e.pageX > original_mouse_x && original_width - (e.pageX - original_mouse_x) < 680)
                    return false;
                if (e.pageY > original_mouse_y && original_height - (e.pageY - original_mouse_y) < 430)
                    return false;

                // restrict when maximizing the chat window
                if (e.pageX < original_mouse_x && original_width - (e.pageX - original_mouse_x) > 1000)
                    return false;
                if (e.pageY < original_mouse_y && original_height - (e.pageY - original_mouse_y) > 550)
                    return false;

                if (currentResizer.classList.contains('bottom-right')) {
                    const width = original_width + (e.pageX - original_mouse_x);
                    const height = original_height + (e.pageY - original_mouse_y)
                    if (width > minimum_size) {
                        element.style.width = width + 'px'
                    }
                    if (height > minimum_size) {
                        element.style.height = height + 'px'
                    }
                }
                else if (currentResizer.classList.contains('bottom-left')) {
                    const height = original_height + (e.pageY - original_mouse_y)
                    const width = original_width - (e.pageX - original_mouse_x)
                    if (height > minimum_size) {
                        element.style.height = height + 'px'
                    }
                    if (width > minimum_size) {
                        element.style.width = width + 'px'
                        element.style.left = original_x + (e.pageX - original_mouse_x) + 'px'
                    }
                }
                else if (currentResizer.classList.contains('top-right')) {
                    const width = original_width + (e.pageX - original_mouse_x)
                    const height = original_height - (e.pageY - original_mouse_y)
                    if (width > minimum_size) {
                        element.style.width = width + 'px'
                    }
                    if (height > minimum_size) {
                        element.style.height = height + 'px'
                        element.style.top = original_y + (e.pageY - original_mouse_y) + 'px'
                    }
                }
                else {
                    const width = original_width - (e.pageX - original_mouse_x)
                    const height = original_height - (e.pageY - original_mouse_y)
                    if (width > minimum_size) {
                        element.style.width = width + 'px'
                        element.style.left = original_x + (e.pageX - original_mouse_x) + 'px'
                    }
                    if (height > minimum_size) {
                        element.style.height = height + 'px'
                        element.style.top = original_y + (e.pageY - original_mouse_y) + 'px'
                    }
                }
                let totalHeight = $('#chatBox').outerHeight() - 72;
                $('.chatBody').height(totalHeight);
                $('.group-user').height(totalHeight - 72)

                $('#address-user').height(totalHeight - 40);

            }

            function stopResize() {
                window.removeEventListener('mousemove', resize)
            }
        }
    }

    makeResizableDiv('.resizable')
</script>
<link rel="manifest" href="manifest.json" />
<!-- The core Firebase JS SDK is always required and must be listed first -->
<script src="https://www.gstatic.com/firebasejs/7.13.2/firebase-app.js"></script>
<!-- TODO: Add SDKs for Firebase products that you want to use
     https://firebase.google.com/docs/web/setup#available-libraries -->
<script src="https://www.gstatic.com/firebasejs/7.13.2/firebase-analytics.js"></script>
<script src="https://www.gstatic.com/firebasejs/7.13.2/firebase-messaging.js"></script>
<script src="firebase-messaging-sw.js"></script>
<script src="@Url.Content("~/scripts/messaging/notification.js")"></script>